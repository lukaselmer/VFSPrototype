<Window x:Class="VFSBrowser.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:viewModel="clr-namespace:VFSBrowser.ViewModel"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        Title="MainWindow" MinWidth="525" MinHeight="300" Height="350" Width="525">  

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/> <!-- Menu -->
            <RowDefinition Height="Auto"/> <!-- Search -->
            <RowDefinition Height="Auto"/> <!-- Path -->
            <RowDefinition Height="*"/>    <!-- ListView -->
        </Grid.RowDefinitions>

        <!-- Menu -->
        <Menu Grid.Row="0" IsMainMenu="True" >
            <MenuItem Header="_File">
                <MenuItem Header="Open VFS" Command="{Binding OpenVfsCommand}" />
                <MenuItem Header="New VFS" Command="{Binding NewVfsCommand}" />
                <MenuItem Header="New Folder" Command="{Binding NewFolderCommand}" />
                <MenuItem Header="Import File" Command="{Binding ImportFileCommand}" />
                <MenuItem Header="Import Folder" Command="{Binding ImportFolderCommand}" />
                <MenuItem Header="Export" Command="{Binding ExportCommand}" CommandParameter="{Binding ElementName=ItemsList, Path=SelectedItems}" />
            </MenuItem>
            <MenuItem Header="_Info">
                <MenuItem Header="Disk Info" Command="{Binding DiskInfoCommand}" />
            </MenuItem>
        </Menu>

        <!-- Search -->
        <Expander Grid.Row="1" Header="Search">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                
                <TextBox Grid.Row="0" Grid.Column="0" Name="SearchTextBox" Text="{Binding Path=SearchOption.Keyword}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding SearchCommand}" CommandParameter="{Binding ElementName=SearchTextBox, Path=Text}" />
                    </TextBox.InputBindings>
                </TextBox>  
                <Button  Grid.Row="0" Grid.Column="1"  Content="Search" Command="{Binding SearchCommand}" />
                <CheckBox Grid.Row="1" Grid.Column="0" Content="Recrusive" IsChecked="{Binding SearchOption.Recursive}"/>
                <CheckBox Grid.Row="2" Grid.Column="0" Content="Case Sensitive" IsChecked="{Binding SearchOption.CaseSensitive}" />
            </Grid>
        </Expander>
        
        <!-- Path -->
        <Label Grid.Row="2" Content="{Binding CurrentPath}" Height="30"></Label>

        <!-- ListView -->
        <ListView Grid.Row="3" ItemsSource="{Binding Items}" Name="ItemsList" 
                  AllowDrop="True" viewModel:DropBehavior.DropCommand="{Binding DropCommand}">

            <!--
            Workaround for this:
            <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding OpenCommand}" CommandParameter="{Binding ElementName=ItemsList, Path=SelectedItem}" />
            -->
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding OpenCommand}" CommandParameter="{Binding ElementName=ItemsList, Path=SelectedItem}"></i:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <ListView.InputBindings>
                <KeyBinding Key="F2" Command="{Binding RenameCommand}" CommandParameter="{Binding ElementName=ItemsList, Path=SelectedItem}" />
                
                <KeyBinding Key="Left" Command="{Binding OpenCommand}" CommandParameter="{Binding Parent}" />
                <KeyBinding Key="Back" Command="{Binding OpenCommand}" CommandParameter="{Binding Parent}" />
                <KeyBinding Key="BrowserBack" Command="{Binding OpenCommand}" CommandParameter="{Binding Parent}" />
                
                <KeyBinding Key="Right" Command="{Binding OpenCommand}" CommandParameter="{Binding ElementName=ItemsList, Path=SelectedItem}" />
                <KeyBinding Key="Enter" Command="{Binding OpenCommand}" CommandParameter="{Binding ElementName=ItemsList, Path=SelectedItem}" />
                <MouseBinding MouseAction="MiddleClick" Command="{Binding OpenCommand}" CommandParameter="{Binding ElementName=ItemsList, Path=SelectedItem}" />
                
                <KeyBinding Key="Delete" Command="{Binding DeleteCommand}" CommandParameter="{Binding ElementName=ItemsList, Path=SelectedItems}" />
                <KeyBinding Modifiers="Control" Key="X" Command="{Binding MoveCommand}" CommandParameter="{Binding ElementName=ItemsList, Path=SelectedItems}" />
                <KeyBinding Modifiers="Control" Key="C" Command="{Binding CopyCommand}" CommandParameter="{Binding ElementName=ItemsList, Path=SelectedItems}" />
                <KeyBinding Modifiers="Control" Key="V" Command="{Binding PasteCommand}" />
            </ListView.InputBindings>
            
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Open" Command="{Binding OpenCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}" />
                    <MenuItem Header="Rename..." Command="{Binding RenameCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}" />
                    <MenuItem Header="Delete" Command="{Binding DeleteCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItems}" />
                    <MenuItem Header="Cut" Command="{Binding MoveCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItems}" />
                    <MenuItem Header="Copy" Command="{Binding CopyCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItems}" />
                    <MenuItem Header="Paste" Command="{Binding PasteCommand}" />
    
                    <MenuItem Header="New Folder" Command="{Binding NewFolderCommand}" />
                    <MenuItem Header="Import File" Command="{Binding ImportFileCommand}" />
                    <MenuItem Header="Import Folder" Command="{Binding ImportFolderCommand}" />
                    <MenuItem Header="Export" Command="{Binding ExportCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItems}" />
                </ContextMenu>
            </ListView.ContextMenu>


            <ListBox.Resources>
                <BitmapImage x:Key="IconFolder"   UriSource="../Resources/Folder.png" />
                <BitmapImage x:Key="IconFile" UriSource="../Resources/File.png" />
                <Style x:Key="IconImageStyleSmall" TargetType="Image">
                    <Setter Property="MaxWidth" Value="16"/>
                    <Setter Property="MaxHeight" Value="16"/>
                    <Setter Property="Margin" Value="5"/>
                </Style>
            </ListBox.Resources>

            <ListView.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" Margin="1">
                        <Image>
                            <Image.Style>
                                <Style BasedOn="{StaticResource IconImageStyleSmall}" TargetType="Image">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsDirectory}" Value="True">
                                            <Setter Property="Source" Value="{Binding Source={StaticResource IconFolder}, Mode=OneTime}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsDirectory}" Value="False">
                                            <Setter Property="Source" Value="{Binding Source={StaticResource IconFile}, Mode=OneTime}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <TextBlock  Text="{Binding Name}" ToolTip="{Binding Path}"  />
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </Grid>
</Window>
